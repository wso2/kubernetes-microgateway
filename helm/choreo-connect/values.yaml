# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

wso2:
  # WSO2 Subscription parameters (https://wso2.com/subscription/)
  # If provided, these parameters will be used to obtain official WSO2 product Docker images available at WSO2 Private Docker Registry (https://docker.wso2.com/)
  # for this deployment
  subscription:
    username: ""
    password: ""
  
  # WSO2 Choreo Analytics Parameters
  # If provided, these parameters will be used publish analytics data to Choreo Analytics environment (https://apim.docs.wso2.com/en/latest/observe/api-manager-analytics/configure-analytics/register-for-analytics/).
  choreoAnalytics:
    enabled: false
    endpoint: ""
    onpremKey: ""

  ingress:
    adapter:
      # adapter ingress is disabled when the Choreo Connect Mode is "APIM_AS_CP" (i.e. not "STANDALONE") even
      # it is enabled with this config
      enabled: true
      hostname: adapter.wso2.com
      secretName: "" # use default secret
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/ssl-redirect: "false"
    gateway:
      enabled: true
      hostname: gw.wso2.com
      secretName: "" # use default secret
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/ssl-redirect: "false"
    internal:
      # The following ingress resource in only for the debugging purposes
      # and check router related config_dumps etc. In a production scenario this should be disabled.
      enabled: true
      hostname: internal.wso2.com
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/ssl-redirect: "false"

  # configure APIM if the deployment.mode is "APIM_AS_CP"
  apim:
    controlPlane:
      hostName: am.wso2.com
      serviceName: wso2am-single-node-am-service.apim-fooo
    trafficManager:
      serviceName: "" # default to controlPlane service name value defined above if not explicitly defined.

  deployment:
    # Deployment option: one of "STANDALONE" or "APIM_AS_CP"
    # Refer deployment options: https://apim.docs.wso2.com/en/4.0.0/deploy-and-publish/deploy-on-gateway/choreo-connect/getting-started/deploy/cc-deploy-overview/
    mode: "STANDALONE"

    # Label (environment) name of the deployment
    labelName: "Default"
    
    # Container image configurations
    # If a custom image must be used, uncomment 'dockerRegistry' and provide its value
    dockerRegistry: ""

    adapter:
      # Container image configurations
      imageName: "choreo-connect-adapter"
      imageTag: "1.0.0"
      # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
      imagePullPolicy: IfNotPresent
      replicaCount: 1

      resources:
        requests:
          memory: "500Mi"
          cpu: "500m"
        limits:
          memory: "500Mi"
          cpu: "500m"

      # Indicates whether the container is running
      livenessProbe:
        # Number of seconds after the container has started before liveness probes are initiated
        initialDelaySeconds: 10
        # How often (in seconds) to perform the probe
        periodSeconds: 30
      # Indicates whether the container is ready to service requests
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated
        initialDelaySeconds: 8
        # How often (in seconds) to perform the probe
        periodSeconds: 5

      # Key value pair of annotations for the pod
      podAnnotations:
        sidecar.istio.io/inject: "false"

      # Override default config toml
      configToml:
        configMapName: ""
        subPath: ""
      # Override default log config toml
      logConfigToml:
        configMapName: ""
        subPath: ""

        # envOverride:
        #   - name: cp_admin_pwd
        #     value: admin
        #   - name: adapter_admin_pwd
        #     valueFrom:
        #       secretKeyRef:
        #         name: my-secret
        #         key: password
        envOverride: []

      security:
        # private key and cert in PEM format
        # for more details: https://apim.docs.wso2.com/en/4.0.0/deploy-and-publish/deploy-on-gateway/choreo-connect/security/importing-certificates-to-the-choreo-connect-truststore/#changing-the-private-certificate-of-a-component
        # override default certs from secrets
        # keystore:
        #   key:
        #     secretName: "adapter-keystore"
        #     subPath: "mg.key"
        #   cert:
        #     secretName: "adapter-keystore"
        #     subPath: "mg.pem"
        keystore: {} # using default certs, if not defined.
        
        # array of secrets with {secretName, subPath}
        # override default certs from secrets
        # truststore:
        #   - secretName: "adapter-cert"
        #     subPath: "mg.pem"
        #   - secretName: "controlplane-cert"
        #     subPath: "wso2carbon.pem"
        truststore: [] # using default certs, if not defined.

        # certs for consul integration
        # override default certs from secrets
        # consul:
        #   agentCaCert:
        #     secretName: ""
        #     subPath: ""
        #   clientCert:
        #     secretName: ""
        #     subPath: ""
        #   clientKey:
        #     secretName: ""
        #     subPath: ""
        consul: {} # using default certs, if not defined.

    gatewayRuntime:
      replicaCount: 1
      podAnnotations: {}

      enforcer:
        # Container image configurations
        imageName: "choreo-connect-enforcer"
        imageTag: "1.0.0"
        # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
        imagePullPolicy: IfNotPresent

        # envOverride:
        #   - name: enforcer_admin_pwd
        #     value: admin
        #   - name: tm_admin_pwd
        #     valueFrom:
        #       secretKeyRef:
        #         name: my-secret
        #         key: tm_password
        envOverride: []

        resources:
          requests:
            memory: "1000Mi"
            cpu: "200m"
          limits:
            memory: "1000Mi"
            cpu: "200m"
        
        # Indicates whether the container is running
        livenessProbe:
          # Number of seconds after the container has started before liveness probes are initiated
          initialDelaySeconds: 10
          # How often (in seconds) to perform the probe
          periodSeconds: 30
        # Indicates whether the container is ready to service requests
        readinessProbe:
          # Number of seconds after the container has started before readiness probes are initiated
          initialDelaySeconds: 8
          # How often (in seconds) to perform the probe
          periodSeconds: 5
        startupProbe:
          failureThreshold: 30
          periodSeconds: 5
        
        security:
          # private key and cert in PEM format
          # for more details: https://apim.docs.wso2.com/en/4.0.0/deploy-and-publish/deploy-on-gateway/choreo-connect/security/importing-certificates-to-the-choreo-connect-truststore/#changing-the-private-certificate-of-a-component
          # override default certs from secrets
          # keystore:
          #   key:
          #     secretName: "enforcer-keystore"
          #     subPath: "mg.key"
          #   cert:
          #     secretName: "enforcer-keystore"
          #     subPath: "mg.pem"
          keystore: {} # using default certs, if not defined.

          backendJWT: # TODO: add backend JWT certs templates
            key:
              secretName: "backend-jwt-keystore"
              subPath: "backend-jwt.key"
            cert:
              secretName: "backend-jwt-keystore"
              subPath: "backend-jwt.pem"
          
          # array of secrets with {secretName, subPath}
          # override default certs from secrets
          # truststore:
          #   - secretName: "adapter-cert"
          #     subPath: "mg.pem"
          #   - secretName: "controlplane-cert"
          #     subPath: "wso2carbon.pem"
          truststore: [] # using default certs, if not defined.

        # Override default log4j2 properties toml
        log4j2Properties:
          configMapName: ""
          subPath: ""

      router:
        # Container image configurations
        imageName: "choreo-connect-router"
        imageTag: "1.0.0"
        # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
        imagePullPolicy: IfNotPresent

        # envOverride:
        #   - name: CONCURRENCY
        #     value: 2
        #   - name: adapter_admin_pwd
        #     valueFrom:
        #       secretKeyRef:
        #         name: my-secret
        #         key: password
        envOverride: [ ]

        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "500Mi"
            cpu: "200m"
        
        # Indicates whether the container is running
        livenessProbe:
          # Number of seconds after the container has started before liveness probes are initiated
          initialDelaySeconds: 20
          # How often (in seconds) to perform the probe
          periodSeconds: 10
        # Indicates whether the container is ready to service requests
        readinessProbe:
          # Number of seconds after the container has started before readiness probes are initiated
          initialDelaySeconds: 20
          # How often (in seconds) to perform the probe
          periodSeconds: 5
        startupProbe:
          failureThreshold: 30
          periodSeconds: 5

        security:
          # private key and cert in PEM format
          # for more details: https://apim.docs.wso2.com/en/4.0.0/deploy-and-publish/deploy-on-gateway/choreo-connect/security/importing-certificates-to-the-choreo-connect-truststore/#changing-the-private-certificate-of-a-component
          # override default certs from secrets
          # keystore:
          #   key:
          #     secretName: "adapter-keystore"
          #     subPath: "mg.key"
          #   cert:
          #     secretName: "adapter-keystore"
          #     subPath: "mg.pem"
          keystore: {} # using default certs, if not defined.
          
          # array of secrets with {secretName, subPath}
          # override default certs from secrets
          # truststore:
          #   - secretName: "adapter-cert"
          #     subPath: "mg.pem"
          #   - secretName: "controlplane-cert"
          #     subPath: "wso2carbon.pem"
          truststore: [] # using default certs, if not defined.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
