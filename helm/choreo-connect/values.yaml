# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

wso2:
  # WSO2 Subscription parameters (https://wso2.com/subscription/)
  # If provided, these parameters will be used to obtain official WSO2 product Docker images available at WSO2 Private Docker Registry (https://docker.wso2.com/)
  # for this deployment
  subscription:
    username: ""
    password: ""
  
  # WSO2 Choreo Analytics Parameters
  # If provided, these parameters will be used publish analytics data to Choreo Analytics environment (https://apim.docs.wso2.com/en/latest/observe/api-manager-analytics/configure-analytics/register-for-analytics/).
  choreoAnalytics:
    enabled: false
    endpoint: "https://analytics-event-auth.choreo.dev/auth/v1"
    onpremKey: ""

  ingress:
    adapter:
      # Create ingress resource for adapter Rest endpoint. Adapter ingress is disabled when the Choreo Connect Mode is "APIM_AS_CP" (i.e. not "STANDALONE")
      # even it is enabled with this config
      enabled: true
      # Hostname for adapter in STANDALONE mode
      hostname: adapter.wso2.com
      # TLS secret for the adapter host. Using default secret if not specified
      tlsSecretName: ""
      # Annotations for the adapter Ingress
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/ssl-redirect: "false"
    gateway:
      # If enabled, create the ingress for gateway
      enabled: true
      # Hostname for gateway
      hostname: gw.wso2.com
      # TLS secret for the gateway host. Using default secret if not specified
      tlsSecretName: ""
      # Annotations for the gateway Ingress
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/ssl-redirect: "false"
    internal:
      # Enable internal ingress resource only for the debugging purposes
      # and check router related config_dumps etc. In a production scenario this should be disabled.
      enabled: false
      # Hostname for the internal service
      hostname: internal.wso2.com
      # Annotations for the internal service
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/ssl-redirect: "false"

  # Configuration of externally installed APIM service. Configure this, if the deployment.mode is "APIM_AS_CP"
  apim:
    controlPlane:
      # Hostname of the control plane
      hostName: am.wso2.com
      # K8s service name (if in another namespace, `<serviceName>.<namespace>`) of the control plane
      serviceName: wso2am-single-node-am-service.apim
    trafficManager:
      # K8s service name of the traffic manager. If not defined, default to control plane service name
      serviceName: ""

  deployment:
    # Deployment option: one of "STANDALONE" or "APIM_AS_CP"
    # Refer deployment options: https://apim.docs.wso2.com/en/4.0.0/deploy-and-publish/deploy-on-gateway/choreo-connect/getting-started/deploy/cc-deploy-overview/
    mode: "STANDALONE"

    # Label (environment) name of the deployment
    labelName: "Default"
    
    # If a custom image must be used, define the docker registry. Default to DockerHub. If subscription specified it will be "docker.wso2.com"
    dockerRegistry: ""

    # Image pull secrets to pull images from docker registry. If subscriptions are specified a secret with subscriptions details are created and imagePullSecrets will be default to it.
    imagePullSecrets: []

    adapter:
      # Image name for adapter
      imageName: "choreo-connect-adapter"
      # Image tag for adapter
      imageTag: "1.0.0"
      # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
      imagePullPolicy: IfNotPresent
      # Pod count
      replicaCount: 1 # TODO: do we need replica count for adapter? #TODO: add to readme

      # Resources for the adapter container # TODO: check values
      resources:
        requests:
          memory: "300Mi"
          cpu: "300m"
        limits:
          memory: "500Mi"
          cpu: "500m"
      
      # Affinity for adapter pods assignment
      # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
      affinity: {}

      # Node labels for adapter pods assignment
      # ref: https://kubernetes.io/docs/user-guide/node-selection/
      nodeSelector: {}

      # Tolerations for adapter pods assignment
      # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
      tolerations: []
      
      # Security context of the the adapter pod
      # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
      podSecurityContext:
        runAsUser: 10500
        runAsGroup: 10500
      
      # Security context of the the adapter container
      # ref ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      containerSecurityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - all
          add: ["NET_RAW"]

      # Indicates whether the container is running
      livenessProbe:
        # Number of seconds after the container has started before liveness probes are initiated
        initialDelaySeconds: 10
        # How often (in seconds) to perform the probe
        periodSeconds: 30
      # Indicates whether the container is ready to service requests
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated
        initialDelaySeconds: 8
        # How often (in seconds) to perform the probe
        periodSeconds: 5

      # Key value pair of annotations for the pod
      podAnnotations:
        sidecar.istio.io/inject: "false"

      # Define templated config.toml file, if empty using default config.toml
      configToml: ""
      # Define templated log_config.toml file, if empty using default log_config.toml
      logConfigToml: ""

      # envOverride:
      #   - name: cp_admin_pwd
      #     value: admin
      #   - name: adapter_admin_pwd
      #     valueFrom:
      #       secretKeyRef:
      #         name: my-secret
      #         key: password
      envOverride: []

      security:
        adapterRestService:
          # Enable or disable adapter Rest service
          # if not defined, default to true in "STANDALONE" mode and default to false in "APIM_AS_CP" mode
          enabled: ""
          # Hostname for SSL verification
          sslHostname: "adapter"
        # private key and cert in PEM format
        # for more details: https://apim.docs.wso2.com/en/4.0.0/deploy-and-publish/deploy-on-gateway/choreo-connect/security/importing-certificates-to-the-choreo-connect-truststore/#changing-the-private-certificate-of-a-component
        # override default certs from secrets
        # keystore:
        #   key:
        #     secretName: "adapter-certs"
        #     subPath: "tls.key"
        #   cert:
        #     secretName: "adapter-certs"
        #     subPath: "tls.crt"
        keystore: {} # using default certs, if not defined.

        # array of secrets with {secretName, subPath}
        # override default certs from secrets
        # truststore:
        #   - secretName: "adapter-certs"
        #     subPath: "tls.crt"
          # - secretName: "controlplane-cert"
          #   subPath: "wso2carbon.pem"
        truststore: [] # using default certs, if not defined.

        # certs for consul integration
        # override default certs from secrets
        # consul:
        #   agentCaCert:
        #     secretName: ""
        #     subPath: ""
        #   clientCert:
        #     secretName: ""
        #     subPath: ""
        #   clientKey:
        #     secretName: ""
        #     subPath: ""
        consul: {} # using default certs, if not defined.

    # Gateway runtime (enforcer + router) deployment configurations
    # TODO: rename all files as gateway-runtime-deployment?
    # TODO: rename names also?
    gatewayRuntime:
      # TODO: trustedCertPath for CC gateway

      # Key value pair of annotations for the pod
      podAnnotations: {}

      # Pod count
      replicaCount: 1
      # Horizontal pod autoscaling configurations of gateway
      autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 5
        targetCPUUtilizationPercentage: 75
        targetMemoryUtilizationPercentage: 75
      
      # Affinity for adapter pods assignment
      # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
      affinity: {}

      # Node labels for adapter pods assignment
      # ref: https://kubernetes.io/docs/user-guide/node-selection/
      nodeSelector: {}

      # Tolerations for adapter pods assignment
      # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
      tolerations: []

      # Security context of the the adapter pod
      # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
      podSecurityContext:
        runAsUser: 10500
        runAsGroup: 10500
      
      enforcer:
        # Image name for enforcer
        imageName: "choreo-connect-enforcer"
        # Image tag for enforcer
        imageTag: "1.0.0"
        # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
        imagePullPolicy: IfNotPresent

        # envOverride:
        #   - name: enforcer_admin_pwd
        #     value: admin
        #   - name: tm_admin_pwd
        #     valueFrom:
        #       secretKeyRef:
        #         name: my-secret
        #         key: tm_password
        envOverride: []

        # Resources for the enforcer container
        resources:
          requests:
            memory: "500Mi"
            cpu: "500m"
          limits:
            memory: "1000Mi"
            cpu: "1000m"
        
        # Indicates whether the container applications is started
        startupProbe:
          # How often (in seconds) to perform the probe
          periodSeconds: 5
          # Number of time startup probe should be done before mark fail
          failureThreshold: 30
        # Indicates whether the container is running
        livenessProbe:
          # Number of seconds after the container has started before liveness probes are initiated
          initialDelaySeconds: 10
          # How often (in seconds) to perform the probe
          periodSeconds: 30
        # Indicates whether the container is ready to service requests
        readinessProbe:
          # Number of seconds after the container has started before readiness probes are initiated
          initialDelaySeconds: 8
          # How often (in seconds) to perform the probe
          periodSeconds: 5

        # Security context of the the adapter container
        # ref ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
        containerSecurityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - all
            add: ["NET_RAW"]
        
        security:
          # private key and cert in PEM format
          # for more details: https://apim.docs.wso2.com/en/4.0.0/deploy-and-publish/deploy-on-gateway/choreo-connect/security/importing-certificates-to-the-choreo-connect-truststore/#changing-the-private-certificate-of-a-component
          # override default certs from secrets
          # keystore:
          #   key:
          #     secretName: "enforcer-keystore"
          #     subPath: "mg.key"
          #   cert:
          #     secretName: "enforcer-keystore"
          #     subPath: "mg.pem"
          keystore: {} # using default certs, if not defined.

          # Passing end user attributes to the backend
          # ref https://apim.docs.wso2.com/en/latest/deploy-and-publish/deploy-on-gateway/choreo-connect/passing-enduser-attributes-to-the-backend-via-choreo-connect/
          backendJWT:
            enabled: false
            # keystore:
            #   key:
            #     secretName: "backend-jwt-keystore"
            #     subPath: "backend-jwt.key"
            #   cert:
            #     secretName: "backend-jwt-keystore"
            #     subPath: "backend-jwt.pem"
            keystore: {}
          
          # array of secrets with {secretName, subPath}
          # override default certs from secrets
          # truststore:
          #   - secretName: "adapter-cert"
          #     subPath: "tls.crt"
          #   - secretName: "enforcer-truststore"
          #     subPath: "mg.pem"
          truststore: [] # using default certs, if not defined.

        # Define templated log4j2.properties file, if empty using default log4j2.properties
        log4j2Properties: ""

      router:
        # Image name for router
        imageName: "choreo-connect-router"
        # Image tag for router
        imageTag: "1.0.0"
        # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
        imagePullPolicy: IfNotPresent

        # envOverride:
        #   - name: CONCURRENCY
        #     value: 2
        #   - name: adapter_admin_pwd
        #     valueFrom:
        #       secretKeyRef:
        #         name: my-secret
        #         key: password
        envOverride: []

        # Resources for the router container
        resources:
          requests:
            memory: "300Mi"
            cpu: "500m"
          limits:
            memory: "500Mi"
            cpu: "1000m"
        
        # Indicates whether the container applications is started
        startupProbe:
          # How often (in seconds) to perform the probe
          periodSeconds: 5
          # Number of time startup probe should be done before mark fail
          failureThreshold: 30
        # Indicates whether the container is running
        livenessProbe:
          # Number of seconds after the container has started before liveness probes are initiated
          initialDelaySeconds: 20
          # How often (in seconds) to perform the probe
          periodSeconds: 10
        # Indicates whether the container is ready to service requests
        readinessProbe:
          # Number of seconds after the container has started before readiness probes are initiated
          initialDelaySeconds: 20
          # How often (in seconds) to perform the probe
          periodSeconds: 5

        # Security context of the the adapter container
        # ref ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
        containerSecurityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - all
            add: ["NET_RAW"]

        security:
          # private key and cert in PEM format
          # for more details: https://apim.docs.wso2.com/en/4.0.0/deploy-and-publish/deploy-on-gateway/choreo-connect/security/importing-certificates-to-the-choreo-connect-truststore/#changing-the-private-certificate-of-a-component
          # override default certs from secrets
          # keystore:
          #   key:
          #     secretName: "adapter-keystore"
          #     subPath: "mg.key"
          #   cert:
          #     secretName: "adapter-keystore"
          #     subPath: "mg.pem"
          keystore: {} # using default certs, if not defined.
          
kubernetes:
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

# Name to override. Default to "choreo-connect"
nameOverride: ""
# Full name to override. Default to "<RELEASE_NAME>-choreo-connect"
fullnameOverride: ""
