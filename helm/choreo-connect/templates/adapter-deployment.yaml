# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Deployment for adapter

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{printf "%s-%s" (include "choreo-connect.fullname" .) "adapter-deployment" | trunc 63 }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "choreo-connect.labels" . | nindent 4 }}
    app.kubernetes.io/component: choreo-connect-adapter
  # TODO: annotations
spec:
  {{- if not .Values.autoscaling.enabled }} # TODO: ask from pubuduG for autoscaling
  replicas: {{ .Values.wso2.deployment.adapter.replicaCount }} 
  {{- end }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "choreo-connect.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: choreo-connect-adapter
  template:
    metadata:
      {{- with .Values.wso2.deployment.adapter.podAnnotations }}
      annotations:
        sidecar.istio.io/inject: "false" # TODO: added sidecar inject false, check
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "choreo-connect.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: choreo-connect-adapter
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- else if and (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
        - name: {{ include "choreo-connect.subscriptionCredsSecretName" . }}
      {{- end }}
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 10500
        runAsGroup: 10500
        # seccompProfile:  # TODO: check this
        #   type: RuntimeDefault
      containers:
        - name: choreo-connect-adapter
          {{- include "image" (dict "Values" .Values "deployment" .Values.wso2.deployment.adapter) | indent 10 }}
          imagePullPolicy: {{ .Values.wso2.deployment.adapter.imagePullPolicy }}
          volumeMounts:
            - mountPath: /home/wso2/security/keystore/mg.key
              name: adapter-keystore-key
              readOnly: true
              subPath: {{ if .Values.wso2.deployment.adapter.security.keystore }}{{ .Values.wso2.deployment.adapter.security.keystore.key.subPath | quote }}{{ else }}"mg.key"{{ end }}
            - mountPath: /home/wso2/security/keystore/mg.pem
              name: adapter-keystore-cert
              readOnly: true
              subPath: {{ if .Values.wso2.deployment.adapter.security.keystore }}{{ .Values.wso2.deployment.adapter.security.keystore.cert.subPath | quote }}{{ else }}"mg.pem"{{ end }}
            {{- if not .Values.wso2.deployment.adapter.security.truststore }}
            - mountPath: /home/wso2/security/truststore/controlplane.pem
              name: adapter-truststore-controlplane
              readOnly: true
              subPath: controlplane.pem
            - mountPath: /home/wso2/security/truststore/mg.pem
              name: adapter-truststore-adapter
              readOnly: true
              subPath: mg.pem
            {{- else }}
              {{- range .Values.wso2.deployment.adapter.security.truststore }}
            - mountPath: /home/wso2/security/truststore{{ if .subPath  }}{{ printf "/%s" .subPath }}{{- end }}
              name: {{ printf "%s-%s" .secretName .subPath | lower | trunc 63 | trimSuffix "-" }}
              readOnly: true
              subPath: {{ .subPath | quote }}
              {{- end -}}
            {{- end }}
            - mountPath: /home/wso2/security/truststore/consul/consul-agent-ca.pem
              name: consul-agent-ca-cert
              readOnly: true
              subPath: {{ if .Values.wso2.deployment.adapter.security.consul }}{{ .Values.wso2.deployment.adapter.security.consul.agentCaCert.subPath | quote }}{{ else }}"consul-agent-ca.pem"{{ end }}
            - mountPath: /home/wso2/security/truststore/consul/local-dc-client-consul-0-key.pem
              name: consul-client-cert
              readOnly: true
              subPath: {{ if .Values.wso2.deployment.adapter.security.consul }}{{ .Values.wso2.deployment.adapter.security.consul.clientCert.subPath | quote }}{{ else }}"local-dc-client-consul-0-key.pem"{{ end }}
            - mountPath: /home/wso2/security/truststore/consul/local-dc-client-consul-0.pem
              name: consul-client-key
              readOnly: true
              subPath: {{ if .Values.wso2.deployment.adapter.security.consul }}{{ .Values.wso2.deployment.adapter.security.consul.clientKey.subPath | quote }}{{ else }}"local-dc-client-consul-0.pem"{{ end }}
            - mountPath: /home/wso2/conf/config.toml
              name: config-toml
              {{ include "subPath" (.Values.wso2.deployment.adapter.configToml.subPath | default "config.toml")}}
            - mountPath: /home/wso2/conf/log_config.toml
              name: logconfig-toml
              {{ include "subPath" (.Values.wso2.deployment.adapter.logConfigToml.subPath | default "log_config.toml")}}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - all
              add: ["NET_RAW"]
          {{- if .Values.wso2.deployment.adapter.envFrom }}
          envFrom:
            {{- toYaml .Values.wso2.deployment.adapter.envFrom | nindent 12}}
          {{- else }}
          env:
            - name: ADAPTER_PRIVATE_KEY_PATH
              value: "/home/wso2/security/keystore/mg.key"
            - name: ADAPTER_PUBLIC_CERT_PATH
              value: "/home/wso2/security/keystore/mg.pem"
            - name: adapter_admin_pwd
              value: "admin"
            - name: cp_admin_pwd
              value: "admin"
          {{- end }}
          {{- with .Values.wso2.deployment.adapter.resources }}
          resources:
            requests:
              memory: {{ .requests.memory }}
              cpu: {{ .requests.cpu }}
            limits:
              memory: {{ .limits.memory }}
              cpu: {{ .limits.cpu }}
          {{- end }}
          ports:
            - containerPort: 18000
            - containerPort: 9843
          livenessProbe:
            exec:
              command: [ "sh", "check_health.sh" ]
            initialDelaySeconds: {{ .Values.wso2.deployment.adapter.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.adapter.livenessProbe.periodSeconds }}
          readinessProbe:
            exec:
              command: [ "sh", "check_health.sh" ]
            initialDelaySeconds: {{ .Values.wso2.deployment.adapter.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.adapter.readinessProbe.periodSeconds }}
      volumes:
        - name: adapter-keystore-key
          secret:
            secretName: {{ if .Values.wso2.deployment.adapter.security.keystore }}{{ .Values.wso2.deployment.adapter.security.keystore.key.secretName }}{{ else }}{{printf "%s-default-keystore" (include "choreo-connect.adapterFullname" .) | trunc 63}}{{ end }}
        - name: adapter-keystore-cert
          secret:
            secretName: {{ if .Values.wso2.deployment.adapter.security.keystore }}{{ .Values.wso2.deployment.adapter.security.keystore.cert.secretName }}{{ else }}{{printf "%s-default-keystore" (include "choreo-connect.adapterFullname" .) | trunc 63}}{{ end }}
        {{- if not .Values.wso2.deployment.adapter.security.truststore }}
        - name: adapter-truststore-controlplane
          secret:
            secretName: {{ printf "%s-default-truststore" (include "choreo-connect.adapterFullname" .) | trunc 63 }}
        - name: adapter-truststore-adapter
          secret:
            secretName: {{ printf "%s-default-truststore" (include "choreo-connect.adapterFullname" .) | trunc 63 }}
        {{- else }}
          {{- range .Values.wso2.deployment.adapter.security.truststore }}
        - name: {{ printf "%s-%s" .secretName .subPath | lower | trunc 63 | trimSuffix "-" }}
          secret:
            secretName: {{ .secretName }}
          {{- end }}
        {{- end }}
        - name: consul-agent-ca-cert
          secret:
            secretName: {{ if .Values.wso2.deployment.adapter.security.consul }}{{ .Values.wso2.deployment.adapter.security.consul.agentCaCert.secretName }}{{ else }}{{printf "%s-default-consul-certs" (include "choreo-connect.adapterFullname" .) | trunc 63}}{{ end }}
        - name: consul-client-cert
          secret:
            secretName: {{ if .Values.wso2.deployment.adapter.security.consul }}{{ .Values.wso2.deployment.adapter.security.consul.clientCert.secretName }}{{ else }}{{printf "%s-default-consul-certs" (include "choreo-connect.adapterFullname" .) | trunc 63}}{{ end }}
        - name: consul-client-key
          secret:
            secretName: {{ if .Values.wso2.deployment.adapter.security.consul }}{{ .Values.wso2.deployment.adapter.security.consul.clientKey.secretName }}{{ else }}{{printf "%s-default-consul-certs" (include "choreo-connect.adapterFullname" .) | trunc 63}}{{ end }}
        - name: config-toml
          configMap:
            name: {{ .Values.wso2.deployment.adapter.configToml.configMapName | default (printf "%s-config-toml" (include "choreo-connect.adapterFullname" .) | trunc 63)}}
        - name: logconfig-toml
          configMap:
            name: {{ .Values.wso2.deployment.adapter.logConfigToml.configMapName | default (printf "%s-logconfig-toml" (include "choreo-connect.adapterFullname" .) | trunc 63)}}
      restartPolicy: Always
