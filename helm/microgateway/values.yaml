# Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
wso2:
  # WSO2 subscription parameters. If you do not have an active subscription, do not provide values for the parameters.
  # If you do not possess an active WSO2 subscription already, you can sign up for a WSO2 Free Trial Subscription at (https://wso2.com/free-trial-subscription).
  subscription:
    username: ""
    password: ""
  deployment:
    wso2microgw:
      projectName: ""
      # Docker registry details
      dockerRegistry: ""
      imageName: "wso2micro-gw"
      imageTag: "3.0.1"
      # Number of deployment replicas
      replicas: 1
      # Minimum number of seconds for which a newly created pod should be ready without any of its containers crashing, for it to be considered available.
      minReadySeconds: 30
      strategy:
        rollingUpdate:
          # The maximum number of pods that can be scheduled above the desired number of pods.
          maxSurge: 1
          # The maximum number of pods that can be unavailable during the update.
          maxUnavailable: 0
      # Indicates whether the container is running.
      livenessProbe:
        # Number of seconds after the container has started before liveness probes are initiated.
        initialDelaySeconds: 10
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      # Indicates whether the container is ready to service requests.
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated.
        initialDelaySeconds: 10
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      # These are the minimum resource recommendations for running WSO2 API Management product profiles
      # as per official documentation (https://docs.wso2.com/display/MG301/Installation+Prerequisites#InstallationPrerequisites-MicrogatewayRuntime).
      resources:
        requests:
          # The minimum amount of memory that should be allocated for a Pod
          memory: "256Mi"
          # The minimum amount of CPU that should be allocated for a Pod
          cpu: "2000m"
        limits:
          # The maximum amount of memory that should be allocated for a Pod
          memory: "1Gi"
          # The maximum amount of CPU that should be allocated for a Pod
          cpu: "2000m"
      ingress:
        # Hostname for ingress
        hostname: "am.wso2.com"
        # Annotations for Microgateway
        annotations:
          kubernetes.io/ingress.class: "nginx"
          nginx.ingress.kubernetes.io/ssl-passthrough: "true"
          nginx.ingress.kubernetes.io/affinity: "cookie"
          nginx.ingress.kubernetes.io/session-cookie-name: "route"
          nginx.ingress.kubernetes.io/session-cookie-hash: "sha1" 
#     config:
#       deployment.toml: |-
#         # deployment configurations
  # This is the set of configurations that should be overridden in the micro-gw.conf file
  # Eg: If the value of the Key Manager server URL must be changed, the configuration must be changed as follows:
  #   [keyManager]
  #      serverUrl="https://localhost:9443"
  #
  #   keyManager_serverUrl: "https://localhost:9443"
  microgatewayConfigurations:
#    analytics_enable: true
#    analytics_uploadingEndpoint: "https://localhost:9444/analytics/v1.0/usage/upload-file"
#    analytics_username: admin
#    analytics_password: admin

  # Configurations for the logstash container image and elasticsearch authorization credentials
  # Centralized logging is disabled by default. If it is required to enable centralized logging, please follow the instructions
  # provided in the documentation (https://github.com/wso2/kubernetes-microgateway#enabling-centralized-logging)
  centralizedLogging:
    enabled: false
    logstash:
#      config:
#        logstashYaml:
#          logstash-yml.yaml: |-
#        logstashConf:
#          logstash-conf.yaml: |-
      imageTag: 7.2.0
      elasticsearch:
        host: wso2-elasticsearch-master
        username: "elastic"
        password: "changeme"
