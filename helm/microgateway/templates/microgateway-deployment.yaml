# Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wso2micro-gw-deployment
  namespace : {{ .Release.Namespace }}
spec:
  replicas: {{ default 1 .Values.wso2.deployment.wso2microgw.replicas }}
  minReadySeconds: {{ default 30 .Values.wso2.deployment.wso2microgw.minReadySeconds }}
  strategy:
    rollingUpdate:
      maxSurge: {{ default 1 .Values.wso2.deployment.wso2microgw.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ default 0 .Values.wso2.deployment.wso2microgw.strategy.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      deployment: wso2micro-gw
      app: wso2micro-gw
      monitoring: {{ default "jmx" .Values.wso2.monitoring.prometheus.jmxJobName }}
  template:
    metadata:
      labels:
        deployment: wso2micro-gw
        app: wso2micro-gw
        monitoring: {{ default "jmx" .Values.wso2.monitoring.prometheus.jmxJobName }}
    spec:
      {{ if .Values.wso2.centralizedLogging.enabled }}
      initContainers:
      - name: init-logstash-plugins-install
        image: docker.elastic.co/logstash/logstash:{{ default "7.2.0" .Values.wso2.centralizedLogging.logstash.imageTag }}
        command:
          - /bin/sh
          - "-c"
          - |
            set -e
            ./bin/logstash-plugin install logstash-codec-multiline logstash-filter-grok
        volumeMounts:
          - name: shared-plugins
            mountPath: /usr/share/logstash/plugins/
      - name: init-elasticsearch
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of Elasticsearch Server deployment"; while ! nc -z {{ default "wso2-elasticsearch-master" .Values.wso2.centralizedLogging.logstash.elasticsearch.host }} 9200; do sleep 1; printf "-"; done; echo -e "  >> Elasticsearch server has started";']
      {{ end }}
      {{ if .Values.wso2.monitoring.enabled }}
      - name: init-jmx-exporter
        image: busybox:1.31
        command:
          - /bin/sh
          - "-c"
          - |
            set -e
            wget https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.12.0/jmx_prometheus_javaagent-0.12.0.jar -P /jmx-jar/
        volumeMounts:
          - name: shared-prometheus-jmx-jar
            mountPath: /jmx-jar
      {{ end }}
      containers:
      - name: wso2micro-gw
        {{ if not (eq .Values.wso2.deployment.wso2microgw.dockerRegistry "") }}
        image: {{ .Values.wso2.deployment.wso2microgw.dockerRegistry }}/{{ default "wso2micro-gw" .Values.wso2.deployment.wso2microgw.imageName }}
        {{- $tag := .Values.wso2.deployment.wso2microgw.imageTag }}
        {{- if not (eq $tag "") }}{{- printf ":%s" $tag -}}{{- end }}
        {{ else }}
        image: wso2/{{ default "wso2micro-gw" .Values.wso2.deployment.wso2microgw.imageName }}:{{ default "3.0.1" .Values.wso2.deployment.wso2microgw.imageTag }}
        {{ end }}
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - nc -z localhost 9095
          initialDelaySeconds: {{ default 10 .Values.wso2.deployment.wso2microgw.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ default 10 .Values.wso2.deployment.wso2microgw.livenessProbe.periodSeconds }}
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - nc -z localhost 9095
          initialDelaySeconds: {{ default 10 .Values.wso2.deployment.wso2microgw.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ default 10 .Values.wso2.deployment.wso2microgw.readinessProbe.periodSeconds }}
        resources:
          requests:
            memory: {{ .Values.wso2.deployment.wso2microgw.resources.requests.memory }}
            cpu: {{ .Values.wso2.deployment.wso2microgw.resources.requests.cpu }}
          limits:
            memory: {{ .Values.wso2.deployment.wso2microgw.resources.limits.memory }}
            cpu: {{ .Values.wso2.deployment.wso2microgw.resources.limits.cpu }}
        imagePullPolicy: Always
        command:
          - /bin/bash
          - "-c"
          - /home/ballerina/init/init.sh
        securityContext:
          runAsUser: 100
        ports:
        - containerPort: 9090
          protocol: TCP
        - containerPort: 9095
          protocol: TCP
        {{ if .Values.wso2.monitoring.enabled }}
        - containerPort: 2222
          protocol: TCP
          name: metrics
        {{ end }}
        env:
        - name: PROJECT
          value: {{ .Values.wso2.deployment.wso2microgw.projectName }}
        {{- range $key, $val := .Values.wso2.microgatewayConfigurations }}
        - name: {{ $key }}
          value: {{ $val | quote }}
        {{- end}}
        volumeMounts:
        - name: microgateway-conf
          mountPath: /home/ballerina/conf/micro-gw.conf
          subPath: micro-gw.conf
        - name: microgateway-logging
          mountPath: /home/ballerina/init/init.sh
          subPath: init.sh
        - name: microgateway-jmx-ballerina
          mountPath: /home/ballerina/jmx/ballerina
          subPath: ballerina
        {{ if .Values.wso2.monitoring.enabled }}
        - name: shared-prometheus-jmx-jar
          mountPath: /home/wso2carbon/prometheus
        - name: microgateway-prometheus-exporter-conf
          mountPath: /home/wso2carbon/prometheus/config.yaml
          subPath: config.yaml
        {{ end }}
        {{ if .Values.wso2.centralizedLogging.enabled }}
        - name: shared-logs
          mountPath: home/ballerina/logs
      - name: wso2micro-gw-logstash
        image: docker.elastic.co/logstash/logstash:{{ default "7.2.0" .Values.wso2.centralizedLogging.logstash.imageTag }}
        volumeMounts:
          - name: shared-logs
            mountPath: /usr/share/logstash/wso2-logs/
          - name: logstash-yml
            mountPath: /usr/share/logstash/config/logstash.yml
            subPath: logstash.yml
          - name: logstash-conf
            mountPath: /usr/share/logstash/pipeline/logstash.conf
            subPath: logstash.conf
          - name: shared-plugins
            mountPath: /usr/share/logstash/plugins/
        env:
          - name: NODE_ID
            value: {{ .Release.Name }}-microgateway-node
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: ELASTICSEARCH_USERNAME
            valueFrom:
              secretKeyRef:
                name: logstash-elasticsearch-creds
                key: username
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: logstash-elasticsearch-creds
                key: password
          - name: ELASTICSEARCH_HOST
            value: {{ default "wso2-elasticsearch-master" .Values.wso2.centralizedLogging.logstash.elasticsearch.host }}
            {{ end }}
      {{ if and (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
      - name: wso2micro-gw-deployment-creds
      {{ end }}
      volumes:
        - name: microgateway-conf
          configMap:
            name: microgateway-conf
        - name: microgateway-logging
          configMap:
            name: microgateway-logging
            defaultMode: 0777
        - name: microgateway-jmx-ballerina
          configMap:
            name: microgateway-jmx-ballerina
            defaultMode: 0777
        {{ if .Values.wso2.centralizedLogging.enabled }}
        - name: shared-logs
          emptyDir: {}
        - name: logstash-yml
          configMap:
            name: logstash-yml
        - name: logstash-conf
          configMap:
            name: logstash-conf
        - name: shared-plugins
          emptyDir: {}
        - name: logstash-elasticsearch-creds
          secret:
            secretName: logstash-elasticsearch-creds
        {{ end }}
        {{ if .Values.wso2.monitoring.enabled }}
        - name: shared-prometheus-jmx-jar
          emptyDir: {}
        - name: microgateway-prometheus-exporter-conf
          configMap:
            name: microgateway-prometheus-exporter-conf
        - name: microgateway-bin
          configMap:
            name: microgateway-bin
        {{ end }}
